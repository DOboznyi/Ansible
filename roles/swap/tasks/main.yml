---
- name: get name of existing swap
  command: swapon -s | awk '{print $1}' | tail -n +2
  register: swap_name
  when: expand_swap != false

- name: get name of existing swap
  command: swapon -s | awk '{print $3}' | tail -n +2
  register: swap_size
  when: expand_swap != false

- name: Write swapfile
  command: fallocate -l {{ swapfile_size if expand_swap == false else swap_size }}
  args:
    creates: "{{ swapfile_location }}"
  register: write_swapfile
  when: swapfile_size != false

- name: Set swapfile permissions
  file: 
    path: "{{ swapfile_location }}"
    owner: root
    group: root
    mode: 0600
  when: swapfile_size != false

- name: Create swapfile
  command: mkswap {{ swapfile_location }}
  environment:
    PATH: "{{ (ansible_env|default({})).PATH|default('') }}:/usr/local/sbin:/usr/sbin:/sbin"
  register: create_swapfile
  when: swapfile_size != false and write_swapfile.changed

- name: Enable swapfile
  command: swapon {{ swapfile_location }}
  when: swapfile_size != false and create_swapfile.changed

- name: Disable existing swapfile
  command: swapoff {{ swap_name }}
  when: swap_name != '0' and expand_swap != false

- name: Expand existing swapfile
  command: fallocate -l {{ swapfile_size }} {{ swap_name }}
  when: swap_name != '0' and expand_swap != false

- name: Enable existing swapfile
  command: swapon {{ swap_name }}
  when: swap_name != '0' and expand_swap != false

- name: Disable temporary swapfile
  command: swapoff {{ swapfile_location }}
  when: swap_name != '0' and expand_swap != false

- name: Delete existing
  file:
    path: "{{ swapfile_location }}"
    state: absent

- name: Add swapfile to /etc/fstab
  mount:
    name: none
    src: "{{ swapfile_location }}"
    fstype: swap
    opts: sw
    passno: '0'
    dump: '0'
    state: present
  when: swapfile_size != false and expand_swap = false

- name: configure vm.swappiness
  sysctl:
    name: vm.swappiness
    value: "{{ swapfile_swappiness }}"
    reload: true
    state: present
  when: swapfile_swappiness is defined

- name: configure vm.vfs_cache_pressure
  sysctl:
    name: vm.vfs_cache_pressure
    value: "{{ swapfile_vfs_cache_pressure }}"
    reload: true
    state: present
  when: swapfile_vfs_cache_pressure is defined